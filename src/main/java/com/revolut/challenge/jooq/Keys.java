/*
 * This file is generated by jOOQ.
 */
package com.revolut.challenge.jooq;


import com.revolut.challenge.jooq.tables.AccountTransaction;
import com.revolut.challenge.jooq.tables.FinancialAccount;
import com.revolut.challenge.jooq.tables.Transfer;
import com.revolut.challenge.jooq.tables.records.AccountTransactionRecord;
import com.revolut.challenge.jooq.tables.records.FinancialAccountRecord;
import com.revolut.challenge.jooq.tables.records.TransferRecord;

import javax.annotation.processing.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>PUBLIC</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<AccountTransactionRecord, Long> IDENTITY_ACCOUNT_TRANSACTION = Identities0.IDENTITY_ACCOUNT_TRANSACTION;
    public static final Identity<FinancialAccountRecord, Long> IDENTITY_FINANCIAL_ACCOUNT = Identities0.IDENTITY_FINANCIAL_ACCOUNT;
    public static final Identity<TransferRecord, Long> IDENTITY_TRANSFER = Identities0.IDENTITY_TRANSFER;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AccountTransactionRecord> PK_ACCOUNT_TRANSACTION = UniqueKeys0.PK_ACCOUNT_TRANSACTION;
    public static final UniqueKey<FinancialAccountRecord> PK_FINANCIAL_ACCOUNT = UniqueKeys0.PK_FINANCIAL_ACCOUNT;
    public static final UniqueKey<TransferRecord> PK_TRANSFER = UniqueKeys0.PK_TRANSFER;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<AccountTransactionRecord, Long> IDENTITY_ACCOUNT_TRANSACTION = Internal.createIdentity(AccountTransaction.ACCOUNT_TRANSACTION, AccountTransaction.ACCOUNT_TRANSACTION.ID);
        public static Identity<FinancialAccountRecord, Long> IDENTITY_FINANCIAL_ACCOUNT = Internal.createIdentity(FinancialAccount.FINANCIAL_ACCOUNT, FinancialAccount.FINANCIAL_ACCOUNT.ID);
        public static Identity<TransferRecord, Long> IDENTITY_TRANSFER = Internal.createIdentity(Transfer.TRANSFER, Transfer.TRANSFER.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<AccountTransactionRecord> PK_ACCOUNT_TRANSACTION = Internal.createUniqueKey(AccountTransaction.ACCOUNT_TRANSACTION, "PK_ACCOUNT_TRANSACTION", AccountTransaction.ACCOUNT_TRANSACTION.ID);
        public static final UniqueKey<FinancialAccountRecord> PK_FINANCIAL_ACCOUNT = Internal.createUniqueKey(FinancialAccount.FINANCIAL_ACCOUNT, "PK_FINANCIAL_ACCOUNT", FinancialAccount.FINANCIAL_ACCOUNT.ID);
        public static final UniqueKey<TransferRecord> PK_TRANSFER = Internal.createUniqueKey(Transfer.TRANSFER, "PK_TRANSFER", Transfer.TRANSFER.ID);
    }
}
