/*
 * This file is generated by jOOQ.
 */
package com.revolut.challenge.jooq.tables.records;


import com.revolut.challenge.jooq.tables.FinancialAccount;
import com.revolut.challenge.model.enumeration.AccountStatusType;
import com.revolut.challenge.model.enumeration.Currency;

import java.math.BigDecimal;
import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FinancialAccountRecord extends UpdatableRecordImpl<FinancialAccountRecord> implements Record6<Long, AccountStatusType, String, LocalDateTime, BigDecimal, Currency> {

    private static final long serialVersionUID = 1700298837;

    /**
     * Setter for <code>PUBLIC.FINANCIAL_ACCOUNT.ID</code>.
     */
    public FinancialAccountRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.FINANCIAL_ACCOUNT.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>PUBLIC.FINANCIAL_ACCOUNT.ACCOUNT_STATUS_TYPE</code>.
     */
    public FinancialAccountRecord setAccountStatusType(AccountStatusType value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.FINANCIAL_ACCOUNT.ACCOUNT_STATUS_TYPE</code>.
     */
    public AccountStatusType getAccountStatusType() {
        return (AccountStatusType) get(1);
    }

    /**
     * Setter for <code>PUBLIC.FINANCIAL_ACCOUNT.ACCOUNT_NUMBER</code>.
     */
    public FinancialAccountRecord setAccountNumber(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.FINANCIAL_ACCOUNT.ACCOUNT_NUMBER</code>.
     */
    public String getAccountNumber() {
        return (String) get(2);
    }

    /**
     * Setter for <code>PUBLIC.FINANCIAL_ACCOUNT.CREATE_DATETIME</code>.
     */
    public FinancialAccountRecord setCreateDatetime(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.FINANCIAL_ACCOUNT.CREATE_DATETIME</code>.
     */
    public LocalDateTime getCreateDatetime() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>PUBLIC.FINANCIAL_ACCOUNT.BALANCE</code>.
     */
    public FinancialAccountRecord setBalance(BigDecimal value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.FINANCIAL_ACCOUNT.BALANCE</code>.
     */
    public BigDecimal getBalance() {
        return (BigDecimal) get(4);
    }

    /**
     * Setter for <code>PUBLIC.FINANCIAL_ACCOUNT.CURRENCY</code>.
     */
    public FinancialAccountRecord setCurrency(Currency value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.FINANCIAL_ACCOUNT.CURRENCY</code>.
     */
    public Currency getCurrency() {
        return (Currency) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, AccountStatusType, String, LocalDateTime, BigDecimal, Currency> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, AccountStatusType, String, LocalDateTime, BigDecimal, Currency> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return FinancialAccount.FINANCIAL_ACCOUNT.ID;
    }

    @Override
    public Field<AccountStatusType> field2() {
        return FinancialAccount.FINANCIAL_ACCOUNT.ACCOUNT_STATUS_TYPE;
    }

    @Override
    public Field<String> field3() {
        return FinancialAccount.FINANCIAL_ACCOUNT.ACCOUNT_NUMBER;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return FinancialAccount.FINANCIAL_ACCOUNT.CREATE_DATETIME;
    }

    @Override
    public Field<BigDecimal> field5() {
        return FinancialAccount.FINANCIAL_ACCOUNT.BALANCE;
    }

    @Override
    public Field<Currency> field6() {
        return FinancialAccount.FINANCIAL_ACCOUNT.CURRENCY;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public AccountStatusType component2() {
        return getAccountStatusType();
    }

    @Override
    public String component3() {
        return getAccountNumber();
    }

    @Override
    public LocalDateTime component4() {
        return getCreateDatetime();
    }

    @Override
    public BigDecimal component5() {
        return getBalance();
    }

    @Override
    public Currency component6() {
        return getCurrency();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public AccountStatusType value2() {
        return getAccountStatusType();
    }

    @Override
    public String value3() {
        return getAccountNumber();
    }

    @Override
    public LocalDateTime value4() {
        return getCreateDatetime();
    }

    @Override
    public BigDecimal value5() {
        return getBalance();
    }

    @Override
    public Currency value6() {
        return getCurrency();
    }

    @Override
    public FinancialAccountRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public FinancialAccountRecord value2(AccountStatusType value) {
        setAccountStatusType(value);
        return this;
    }

    @Override
    public FinancialAccountRecord value3(String value) {
        setAccountNumber(value);
        return this;
    }

    @Override
    public FinancialAccountRecord value4(LocalDateTime value) {
        setCreateDatetime(value);
        return this;
    }

    @Override
    public FinancialAccountRecord value5(BigDecimal value) {
        setBalance(value);
        return this;
    }

    @Override
    public FinancialAccountRecord value6(Currency value) {
        setCurrency(value);
        return this;
    }

    @Override
    public FinancialAccountRecord values(Long value1, AccountStatusType value2, String value3, LocalDateTime value4, BigDecimal value5, Currency value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FinancialAccountRecord
     */
    public FinancialAccountRecord() {
        super(FinancialAccount.FINANCIAL_ACCOUNT);
    }

    /**
     * Create a detached, initialised FinancialAccountRecord
     */
    public FinancialAccountRecord(Long id, AccountStatusType accountStatusType, String accountNumber, LocalDateTime createDatetime, BigDecimal balance, Currency currency) {
        super(FinancialAccount.FINANCIAL_ACCOUNT);

        set(0, id);
        set(1, accountStatusType);
        set(2, accountNumber);
        set(3, createDatetime);
        set(4, balance);
        set(5, currency);
    }
}
